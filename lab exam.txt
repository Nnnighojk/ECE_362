/*Sawtooth*/
counter = counter + 1;
if (counter==255){
counter = 0;
}
 PWMDTY0 =  counter;


//Triangle
if (updown == 0){
  counter = counter + 1;
  if (counter == 255){
    updown = 1;
  }
} else{
 counter = counter - 1;
 if (counter == 0){
  updown = 0;
 }
  
}


 PWMDTY0 =  counter;
}


//square
  

counter = counter + 1;
if(counter == 150){
  counter = 0;
  if(PWMDTY0 == 0x80){
   PWMDTY0 = 0; 
  }else{
    
  PWMDTY0 = 0x80;
}

//triangle with alternate inputs
if(updown == 0){
 	  counter++;
 	  if(counter == 0x80){
 	    updown = 1;
 	  }
 	}else if (updown == 1){
 	  counter--;
 	  if(counter == 0){
 	    updown = 2;
 	  }
 	}else if (updown == 2){
 	  counter++;
 	  if(counter == 0x40){
 	    updown = 3;
 	  }
 	}else{
 	  counter--;
 	  if(counter == 0){
 	    updown = 0;
 	  }
 	}
 	  
 	  
    PWMDTY0 = counter;
}

//staircase
  counter++;
  if(counter % 20 == 0){
   if(PWMDTY0 == 255){
    counter = 0;
    PWMDTY0 = 0;
   } else{
     
     PWMDTY0 += 51;
   }
  }



//inverse staircase
 	if(updown == 0){
 	  
    counter++;
    if(counter % 20 == 0){
     if(PWMDTY0 == 255){
      counter = 0;
      updown = 1;
     } else{
       PWMDTY0 += 51;
     }
    }
    
 	} else{
 	  
    counter++;
    if(counter % 20 == 0){
     if(PWMDTY0 == 0){
      counter = 0;
      updown = 0;
     } else{
       PWMDTY0 -= 51;
     }
    } 	  
 	  
 	  
 	}


 	if(wavetype == 0){
 	  
  counter++;
  if(counter % 20 == 0){
   if(PWMDTY0 == 255){
    counter = 0;
    PWMDTY0 = 0;
   } else{
     
     PWMDTY0 += 51;
   }
  }
	
 	
 	}else if(wavetype == 1){
 	  
 	 
 	
 	
 	if(updown == 0){
 	  
    counter++;
    if(counter % 20 == 0){
     if(PWMDTY0 == 255){
      counter = 0;
      updown = 1;
     } else{
       PWMDTY0 += 51;
     }
    }
    
 	} else{
 	  
    counter++;
    if(counter % 20 == 0){
     if(PWMDTY0 == 0){
      counter = 0;
      updown = 0;
     } else{
       PWMDTY0 -= 51;
     }
    } 	  
 	  
 	}
 	}

to get frequency, you first get divide bus clock (24mhz) by pre scaler and tc7 of timer. Then you invert it and get period in seconds. After that you count the total number of counters and multiply by period, and invert it.






 	if(counter % 25 == 0){
 	  if(part == 0){
 	    PWMDTY0 = 255;
 	    part = 1;
 	  }else if(part == 1){
 	    part = 2;
 	  }else if(part == 2){
 	    part = 3;
 	  }else if(part == 3){
 	    part = 4;
 	    PWMDTY0 = 255;
 	  }else{
 	    PWMDTY0 = 0;
 	    part = 0;
 	    counter = 0;
 	  }
 	}
 	if(part == 2){
 	  PWMDTY0 -= 2;
 	} else if(part == 3){
 	  PWMDTY0++;
 	}
  	counter++;
	  

    